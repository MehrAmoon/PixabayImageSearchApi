plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply plugin: 'kotlin-android-extensions'

def keysPropertiesFile = rootProject.file("keys.properties")
def keysProperties = new Properties()
keysProperties.load(new FileInputStream(keysPropertiesFile))

kapt {
    useBuildCache = false
    javacOptions {
        option("-XprintProcessorInfo", "true")
    }
}

android {
    kotlinOptions {
        jvmTarget = '11'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    namespace 'com.amoon.apisearchimage'
    compileSdkVersion 32

    defaultConfig {
        applicationId "com.amoon.apisearchimage"
        minSdkVersion 26
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", 'BASE_URL', keysProperties['BASE_URL']
            buildConfigField "String", 'PIXABAY_KEY', keysProperties['PIXABAY_KEY']
        }
        release {
            buildConfigField "String", 'BASE_URL', keysProperties['BASE_URL']
            buildConfigField "String", 'PIXABAY_KEY', keysProperties['PIXABAY_KEY']

            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //Android app bundle settings for density,abi and Language.
    bundle {
        density {
            // Different APKs are generated for devices with different screen densities; true by default.
            enableSplit true
        }
        abi {
            // Different APKs are generated for devices with different CPU architectures; true by default.
            enableSplit true
        }
        language {
            enableSplit false
        }
    }

    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    testImplementation 'junit:junit:4.12'

    def app_compat = "1.3.1"
    implementation "androidx.appcompat:appcompat:$app_compat"

    def material = "1.4.0"
    implementation "com.google.android.material:material:$material"

    def constraint_layout = "2.1.0"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"

    def androidx_ui = "1.0.0-alpha07"
    implementation "androidx.ui:ui-tooling:$androidx_ui"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    def compose_version_test = "1.2.1"
    implementation "androidx.compose.ui:ui-test-junit4:$compose_version_test"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version_test"

    def compose_constraint = "1.0.0-beta02"
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraint"

    def compose_activity = "1.3.1"
    implementation "androidx.activity:activity-compose:$compose_activity"

    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    def retrofit = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0-alpha03'



    def glide = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // Room components
    implementation "androidx.room:room-runtime:2.4.2"
    kapt "androidx.room:room-compiler:2.4.2"
    implementation "androidx.room:room-ktx:2.4.2"
    implementation "androidx.room:room-paging:2.4.2"

    // DataStore Preferences
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    def sqlite_version = "2.0.0"
    implementation "androidx.sqlite:sqlite-ktx:$sqlite_version"
    // for M1 Apple
    def sqlite_jdbc_version = "3.34.0"
    implementation "org.xerial:sqlite-jdbc:$sqlite_jdbc_version"

    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    // Mock
    def mockito_version = "3.8.0"
    testImplementation group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0', {
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation("org.mockito:mockito-inline:2.8.47")
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0', {
        exclude group: 'org.jetbrains.kotlin'
    }

    def coroutines_version = "1.5.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

//    def test = "1.1.1"
//    androidTestImplementation "androidx.fragment:fragment-testing:1.3.0"
//    androidTestImplementation "androidx.test:monitor:$test"
//    androidTestImplementation "androidx.test.uiautomator:uiautomator:$test"
//    androidTestImplementation "androidx.test.runner.screenshot:screenshot:1.5.0"
}